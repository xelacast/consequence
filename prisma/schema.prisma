generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                 String    @id @default(uuid())
  email              String    @unique
  name               String?
  birthday           DateTime?
  first_name         String?
  gender             String?
  last_name          String?
  last_sign_in_at    DateTime?
  object             String?   @default("user")
  password_enabled   Boolean   @default(false)
  phone_numbers      String[]
  profile_image_url  String?
  two_factor_enabled Boolean   @default(false)
  updated_at         DateTime  @default(now())
  username           String?
  allowed_to_login   Boolean   @default(true)
  clerk_id           String?
  day                day[]

  @@unique([clerk_id, email, id])
  @@index([clerk_id, email])
}

model day {
  id              String           @id @default(uuid())
  date            DateTime         @default(now())
  user            user             @relation(fields: [user_id], references: [id])
  user_id         String
  sleep           sleep?
  supplements     supplements[]
  exercise        exercise[]
  // meditation      meditation[]
  nightly_routine nightly_routine?
  health          health[]
  // intermittent_fasting intermittent_fasting?
  form_misc        form_misc?

  @@index([date, user_id])
}

model sleep {
  id         String    @id @default(uuid())
  date       DateTime  @default(now())
  hours      Int
  minutes    Int
  quality    String[]
  rating     Int
  wake_time  DateTime?
  sleep_time DateTime?

  day    day    @relation(fields: [day_id], references: [id])
  day_id String @unique
}

model supplements {
  id                String      @id @default(uuid())
  date              DateTime    @default(now())
  name              Supplements
  amount            Int // in micrograms
  time_of_day_taken TimeOfDay?

  day    day    @relation(fields: [day_id], references: [id])
  day_id String
}

model exercise {
  id          String       @id @default(uuid())
  date        DateTime     @default(now())
  duration    Int
  type        ExerciseType
  time_of_day DateTime
  intensity   String
  fasted      Boolean      @default(false)

  day    day    @relation(fields: [day_id], references: [id])
  day_id String

  exercises exercises[]
}

model exercises {
  id          String   @id @default(uuid())
  name        String
  sets        Int
  reps        Int
  exercise    exercise @relation(fields: [exercise_id], references: [id])
  exercise_id String
}

model form_misc {
  id           String   @id @default(uuid())
  meditation  Boolean  @default(false)
  intermittent_fasting Boolean  @default(false)
  cold_shower        Boolean  @default(false)
  day          day      @relation(fields: [day_id], references: [id])
  day_id       String @unique

}

// Future use case
// model meditation {
//   id       String   @id @default(uuid())
//   date     DateTime @default(now())
//   duration Int
//   time     DateTime

//   day    day    @relation(fields: [day_id], references: [id])
//   day_id String
// }

// Future use case
// model intermittent_fasting {
//   id           String   @id @default(uuid())
//   date         DateTime @default(now())
//   start_time   DateTime?
//   end_time     DateTime?
//   duration     Int?
//   fasted       Boolean  @default(false)

//   day    day    @relation(fields: [day_id], references: [id])
//   day_id String @unique

// }

model nightly_routine {
  id           String   @id @default(uuid())
  date         DateTime @default(now())
  time         DateTime
  read         Boolean  @default(false)
  planned      Boolean  @default(false)
  stretched    Boolean  @default(false)
  affirmations Boolean  @default(false)
  journaling   Boolean  @default(false)

  day    day    @relation(fields: [day_id], references: [id])
  day_id String @unique
}

model health {
  id            String   @id @default(uuid())
  date          DateTime @default(now())
  weight        Float?
  body_fat      Float?
  muscle_mass   Float?
  water         Float?
  bone_mass     Float?
  bmi           Float?
  visceral_fat  Int?
  metabolic_age Int?
  bmr           Int?
  protein       Int?
  minerals      Int?
  vitamins      Int?
  time          DateTime

  energy_levels               Int
  physical_health             Int
  mental_health               Int
  physical_health_description PhysicalHealthDescriptors[]
  mental_health_description   MentalHealthDescriptors[]

  day    day    @relation(fields: [day_id], references: [id])
  day_id String
}

// medications

enum TimeOfDay {
  morning
  afternoon
  evening
  night
}

enum Supplements {
  b_complex_plus
  tumeric
  d3
  k2
  b12
  b6
  b1
  c
  a
  zinc
  omega3
  iodine
  magnesium_threonate
  apigenin
  nac
  ltheanine
  probiotic
}

enum ExerciseType {
  strength
  cardio
  hiit
  yoga
  pilates
  stretching
  calisthenics
  mobility
  breathwork
  walking
  running
  cycling
  swimming
}

enum MentalHealthDescriptors {
  anxious
  worried
  depressed
  low
  irritable
  angry
  optimistic
  hopeful
  calm
  relaxed
  energetic
  lively
  confused
  disoriented
  happy
  joyful
  detached
  numb
  paranoid
  suspicious
  content
  satisfied
  fulfilled
}

enum PhysicalHealthDescriptors {
  Energetic
  Fit
  Healthy
  Strong
  Flexible
  Wellrested
  Active
  Vital
  Robust
  Nourished
  Agile
  Steady
  Balanced
  Hydrated
  Tired
  Weak
  Unwell
  Sick
  Injured
  Painful
  Fatigued
  Frail
  Achy
  Exhausted
  Feeble
  Ill
  Suffering
  Debilitated
  Inflamed
  Diseased
  Unhealthy
}
