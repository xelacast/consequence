generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                 String    @id @default(uuid())
  email              String    @unique
  name               String?
  birthday           DateTime?
  first_name         String?
  gender             String?
  last_name          String?
  last_sign_in_at    DateTime?
  object             String?   @default("user")
  password_enabled   Boolean   @default(false)
  phone_numbers      String[]
  profile_image_url  String?
  two_factor_enabled Boolean   @default(false)
  updated_at         DateTime  @default(now())
  username           String?
  allowed_to_login   Boolean   @default(true)
  clerk_id           String   @unique
  day                day[]
  created_at         DateTime  @default(now())

  @@unique([clerk_id, email])
  @@index([clerk_id, email])
}

model day {
  id              String           @id @default(uuid())
  date            DateTime         @default(now())
  user            user             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String
  sleep           sleep?
  supplements     supplements[]
  exercise        exercise[]
  // meditation      meditation[]
  nightly_routine nightly_routine?
  health          health[]
  // intermittent_fasting intermittent_fasting?
  form_misc       form_misc?
  stress stress[]
  meals meals[]
  journal journal[]

  @@index([date, user_id])
}

model sleep {
  id         String    @id @default(uuid())
  date       DateTime  @default(now())
  hours      Float   @default(0.0)
  minutes    Int?
  quality    String[]
  rating     Int
  wake_time  DateTime?
  sleep_time DateTime?
  notes String?
  day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id String @unique
}

model supplements {
  id                String      @id @default(uuid())
  date              DateTime    @default(now())
  name              Supplements
  amount            Int // in micrograms 1000mcg = 1mg 1000mg = 1g
  time_of_day_taken TimeOfDay?
  time_taken        DateTime?
  measurement       Measurements @default(mg)

  day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id String
}

model stress {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  rating      Int // higher is worse
  time_of_day DateTime
  stressors   String?
  symptoms StressSymptoms[]
  notes String?
  day         day      @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id      String
}

model exercise {
  id          String       @id @default(uuid())
  date        DateTime     @default(now())
  duration    Int
  type        ExerciseType
  time_of_day DateTime
  intensity   String
  fasted      Boolean      @default(false)
  notes String?

  day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id String

  exercises exercises[]
}

model exercises {
  id          String   @id @default(uuid())
  name        String
  sets        Int
  reps        Int
  exercise    exercise @relation(fields: [exercise_id], references: [id], onDelete: Cascade)
  exercise_id String
}

model meals {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  meal        String
  time_of_day DateTime
  notes String?
  healthy     Boolean  @default(true)
  calorie_intake Int
  day         day      @relation(fields: [day_id], references: [id], onDelete: Cascade)
  macros macros?
  day_id      String
}

model macros {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  protein     Int?
  carbs       Int?
  fats        Int?
  fiber       Int?
  sugar       Int?
  sodium      Int?
  cholesterol Int?
  meals meals     @relation(fields: [meals_id], references: [id], onDelete: Cascade)
  meals_id       String @unique
}

model form_misc {
  id           String   @id @default(uuid())
  meditation  Boolean  @default(false)
  intermittent_fasting Boolean  @default(false)
  cold_shower        Boolean  @default(false)
  day          day      @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id       String @unique

}

// Future use case
// model meditation {
//   id       String   @id @default(uuid())
//   date     DateTime @default(now())
//   duration Int
//   time     DateTime

//   day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
//   day_id String
// }

// Future use case
// model intermittent_fasting {
//   id           String   @id @default(uuid())
//   date         DateTime @default(now())
//   start_time   DateTime?
//   end_time     DateTime?
//   duration     Int?
//   fasted       Boolean  @default(false)

//   day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
//   day_id String @unique

// }

model nightly_routine {
  id           String   @id @default(uuid())
  date         DateTime @default(now())
  time         DateTime
  read         Boolean  @default(false)
  planned      Boolean  @default(false)
  stretched    Boolean  @default(false)
  affirmations Boolean  @default(false)
  journaling   Boolean  @default(false)

  day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id String @unique
}

model health {
  id            String   @id @default(uuid())
  date          DateTime @default(now())
  weight        Float?
  body_fat      Float?
  muscle_mass   Float?
  water         Float?
  bone_mass     Float?
  bmi           Float?
  visceral_fat  Int?
  metabolic_age Int?
  bmr           Int?
  protein       Int?
  minerals      Int?
  vitamins      Int?
  time          DateTime

  energy_levels               Int
  physical_health             Int
  mental_health               Int
  physical_health_description PhysicalHealthDescriptors[]
  mental_health_description   MentalHealthDescriptors[]
  notes String?

  day    day    @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id String
}

model journal {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  title       String  @default("Journal Entry")
  content     String
  day         day      @relation(fields: [day_id], references: [id], onDelete: Cascade)
  day_id      String
}

// medications

enum TimeOfDay {
  morning
  afternoon
  evening
  night
}

enum Supplements {
  b_complex_plus
  tumeric
  d3
  k2
  b12
  b6
  b1
  c
  a
  zinc
  omega3
  iodine
  magnesium_threonate
  apigenin
  nac
  ltheanine
  probiotic
  ashwagandha
  apple_cider_vinegar
  lions_mane
  folate
}

enum ExerciseType {
  strength
  cardio
  hiit
  yoga
  pilates
  stretching
  calisthenics
  mobility
  breathwork
  walking
  running
  cycling
  swimming
}

enum MentalHealthDescriptors {
  anxious
  worried
  depressed
  low
  irritable
  angry
  optimistic
  hopeful
  calm
  relaxed
  energetic
  lively
  confused
  disoriented
  happy
  joyful
  detached
  numb
  paranoid
  suspicious
  content
  satisfied
  fulfilled
}

enum PhysicalHealthDescriptors {
  achy
active
agile
balanced
debilitated
diseased
energetic
exhausted
fatigued
feeble
fit
flexible
frail
healthy
hydrated
ill
inflamed
injured
nourished
painful
robust
sick
steady
strong
suffering
tired
unwell
vital
weak
wellrested
unhealthy
}

enum Measurements {
  mg
  mcg
  g
  kg
  cal
  lb
  oz
  ml
  l
}

enum StressSymptoms {
  heart_palpitations
  alcohol_misuse
anger
angry_outbursts
anxiety
chest_pain
decreased_energy
decreased_sex_drive
depression
difficulty_relaxing
drug_misuse
exercising_less_often
fatigue
dizzy
lightheaded
overwhelmed
forgetfulness
headaches
increased_sex_drive
irritability
lack_of_focus
lack_of_motivation
muscle_pain
muscle_tension
nail_biting
negative_thinking
neglecting_responsibilities
overeating
pacing
persistent_worry
pessimism
poor_judgment
racing_thoughts
restlessness
sadness
sleep_problems
social_withdrawal
stomach_upset
tobacco_use
undereating
}